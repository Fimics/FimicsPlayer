if (isApp.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion this.rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.dependencies.testInstrumentationRunner

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isApp.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                //在release模式中排除debug文件夹中所有的java文件
                java {
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies.SupportV7
    implementation rootProject.ext.dependencies.Constraint
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso

    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknifeCompiler

    implementation rootProject.ext.dependencies.okhttp
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.rxjava
    implementation rootProject.ext.dependencies.rxbinding2
    implementation rootProject.ext.dependencies.rxpermissions2
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.retrofit
    implementation rootProject.ext.dependencies.convertergson
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies.logginginterceptor

    api project(':libbase')
}
